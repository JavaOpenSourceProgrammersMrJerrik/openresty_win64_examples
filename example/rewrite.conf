server {
        listen       8081;
        server_name  test.nginx.com;

        location / {
            root   html;
            index  index.html index.htm;
        }        

        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # 访问 /last.html 的时候，页面内容重写到 /index.html 中
	    rewrite /last.html /index.html last;

	    # 访问 /break.html 的时候，页面内容重写到 /index.html 中，并停止后续的匹配
	    rewrite /break.html /index.html break;

	    # 访问 /redirect.html 的时候，页面直接302定向到 /index.html中
	    rewrite /redirect.html /index.html redirect;

	    # 访问 /permanent.html 的时候，页面直接301定向到 /index.html中
	    rewrite /permanent.html /index.html permanent;

	    # 把 /html/*.html => /post/*.html ，301定向
	    rewrite ^/html/(.+?).html$ /post/$1.html permanent;

	    # 把 /search/key => /search.html?keyword=key
	    rewrite ^/search\/([^\/]+?)(\/|$) /search.html?keyword=$1 permanent;

        location /return1{
			if ($request_method = POST) {
		      return 405 "bad";#405 返回bad  如果不指定bad,则返回nginx默认405界面
		 	}
 			echo "ok";
		}

		location /rewrite0{
			# 如果参数中有 a=1 则301到指定域名
			if ($args ~ search=google) {
			    rewrite ^ https://www.google.co.jp/ permanent;
			}
			
		}

		location /redirect1 {#重定向到iqiyi.com
			return 302 https://www.iqiyi.com;
		}

		location /redirect2 {#url改变,重定向到http://localhost:8081/okay
			return 302 "okay";
		}

		location /rewrite3 {
		    # 当匹配 正则表达式 /test1/(.*)时 请求将被临时重定向到 http://www.$1.com
		    # 相当于 flag 写为 redirect
		    rewrite /rewrite3/(.*) http://www.$1.com;
		    return 200 "ok";
		}
		# 在浏览器中输入 http://localhost:8081/rewrite3/iqiyi
		# 则临时重定向到 www.iqiyi.com
		# 后面的 return 指令将没有机会执行了


		location ~ /list/ {
			#return 200 "ok";
			#rewrite .*/user/(\\d+)$ http://www.baidu.com?id=$1;  #重定向到https://www.baidu.com/?id=4
			rewrite .*/user/(\\d+)$ /listUser?id=$1;
		}

		location ~ /listUser {
			default_type text/plain;
			content_by_lua '
				ngx.print("id is:"); # say 换行输出  print 不换行
				ngx.say(ngx.var.arg_id);
			';
		}
 }


